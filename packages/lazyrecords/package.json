{
  "name": "@bodar/lazyrecords",
  "version": "0.0.0",
  "description": "Type-safe SQL query builder for TypeScript with support for PostgreSQL, template literals, and ANSI SQL standard",
  "type": "module",
  "dependencies": {
    "@bodar/totallylazy": "workspace:totallylazy"
  },
  "devDependencies": {
    "bun-types": "1.2.3"
  },
  "exports": {
    "./sql/builder/builders.ts": "./src/sql/builder/builders.ts",
    "./sql/postgres/prepareStatement.ts": "./src/sql/postgres/prepareStatement.ts",
    "./sql/postgres/PostgresRecords.ts": "./src/sql/postgres/PostgresRecords.ts",
    "./sql/postgres/statement.ts": "./src/sql/postgres/statement.ts",
    "./sql/ansi/SetQuantifier.ts": "./src/sql/ansi/SetQuantifier.ts",
    "./sql/ansi/escape.ts": "./src/sql/ansi/escape.ts",
    "./sql/ansi/PredicateExpression.ts": "./src/sql/ansi/PredicateExpression.ts",
    "./sql/ansi/SelectList.ts": "./src/sql/ansi/SelectList.ts",
    "./sql/ansi/Table.ts": "./src/sql/ansi/Table.ts",
    "./sql/ansi/Column.ts": "./src/sql/ansi/Column.ts",
    "./sql/ansi/Aliasable.ts": "./src/sql/ansi/Aliasable.ts",
    "./sql/ansi/IsExpression.ts": "./src/sql/ansi/IsExpression.ts",
    "./sql/ansi/WhereClause.ts": "./src/sql/ansi/WhereClause.ts",
    "./sql/ansi/Aliased.ts": "./src/sql/ansi/Aliased.ts",
    "./sql/ansi/FromClause.ts": "./src/sql/ansi/FromClause.ts",
    "./sql/ansi/SelectExpression.ts": "./src/sql/ansi/SelectExpression.ts",
    "./sql/ansi/Qualified.ts": "./src/sql/ansi/Qualified.ts",
    "./sql/template/Compound.ts": "./src/sql/template/Compound.ts",
    "./sql/template/Value.ts": "./src/sql/template/Value.ts",
    "./sql/template/Text.ts": "./src/sql/template/Text.ts",
    "./sql/template/Expression.ts": "./src/sql/template/Expression.ts",
    "./sql/template/Sql.ts": "./src/sql/template/Sql.ts",
    "./sql/template/Identifier.ts": "./src/sql/template/Identifier.ts"
  },
  "files": [
    "src/**/*.ts",
    "README.md",
    "package.json"
  ]
}